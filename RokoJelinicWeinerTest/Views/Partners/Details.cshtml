@model RokoJelinicWeinerTest.Models.PartnersModel
@{
    Layout = "_ModalLayout";
    ViewData["Title"] = "Partner Details";
}
<div>
    <dl class="row">
        <dt class = "col-sm-2">
            Full Name
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PartnerNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PartnerNumber)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CroatianPIN)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CroatianPIN)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PartnerTypeId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PartnerTypeId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAtUtc)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAtUtc)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreateByUser)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreateByUser)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsForeign)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsForeign)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExternalCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExternalCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
    </dl>
</div>
<div>
    <h4>Add Policy</h4>
    <form id="addPolicyForm" asp-action="AddPolicy" asp-controller="Partners" method="post">
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label for="policyNumber">Select Policy:</label>
            <select id="policyNumber" name="policyNumber" class="form-control" asp-items="ViewBag.Policies">
                <option value="">-- Select Policy --</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Add Policy</button>
    </form>
</div>
<div>
    <h4>Policies</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Policy Number</th>
                <th>Policy Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var policy in Model.PartnersPolicies)
            {
                <tr>
                    <td>@policy.Policies.PolicyNumber</td>
                    <td>@policy.Policies.PolicyPrice</td>
                    <td>
                        <a href="#" onclick="confirmRemoval(@Model.Id, '@policy.PolicyNumber')">Remove the policy</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(function () {
        $('#addPolicyForm').submit(function (e) {
            e.preventDefault(); // Prevent the default form submission behavior

            // Serialize form data
            var formData = $(this).serialize();

            // Send POST request to add policy
            $.post('/Partners/AddPolicy', formData)
                .done(function (response) {
                    if (response.success) {
                        // Automatically reload the page after adding the policy
                        location.reload();
                    } else {
                        // Display error message if policy addition fails
                        alert('Failed to add policy: ' + response.message);
                    }
                })
                .fail(function () {
                    // Handle failure of AJAX request
                    alert('An error occurred while processing your request.');
                });
        });
    });
</script>
<script>
    function confirmRemoval(partnerId, policyNumber) {
        if (confirm('Are you sure you want to remove this policy?')) {
            var currentUrl = window.location.href;
            window.location.href = '@Url.Action("RemovePolicy", "Partners")?id=' + partnerId + '&policyNumber=' + encodeURIComponent(policyNumber) + '&returnUrl=' + encodeURIComponent(currentUrl);
        }
    }
</script>
<div>
    <a asp-action="Edit" asp-controller="Partners" asp-route-id="@Model?.Id">Edit Partner</a> |
    <a asp-action="Delete" asp-controller="Partners" asp-route-id="@Model?.Id">Delete Partner</a>
</div>
